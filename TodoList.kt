/**
 * üöÄ –ü—Ä–æ—Å—Ç–æ–π To-Do List –Ω–∞ Kotlin
 * - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á
 * - –û—Ç–º–µ—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö
 * - –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∑–∞–¥–∞—á
 */

data class Task(
    val id: Int,
    var title: String,
    var isCompleted: Boolean = false
)

class TodoList {
    private val tasks = mutableListOf<Task>()
    private var nextId = 1

    // –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É
    fun addTask(title: String): Task {
        val task = Task(nextId++, title)
        tasks.add(task)
        return task
    }

    // –£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É
    fun removeTask(id: Int): Boolean {
        return tasks.removeIf { it.id == id }
    }

    // –û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é
    fun completeTask(id: Int): Boolean {
        val task = tasks.find { it.id == id }
        task?.isCompleted = true
        return task != null
    }

    // –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∑–∞–¥–∞—á–∏
    fun getAllTasks(): List<Task> = tasks.toList()

    // –ü–æ–ª—É—á–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏
    fun getActiveTasks(): List<Task> = tasks.filter { !it.isCompleted }

    // –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
    fun searchTasks(query: String): List<Task> {
        return tasks.filter { it.title.contains(query, ignoreCase = true) }
    }
}